{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","addTodo","useState","id","task","completed","todo","setTodo","onSubmit","e","preventDefault","trim","uuid","name","type","value","onChange","target","autoComplete","Todo","toggleComplete","removeTodo","style","display","onClick","color","textDecoration","TodoList","todos","map","LOCAL_STORAGE_KEY","App","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","className","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAkCeA,MA/Bf,YAA6B,IAAVC,EAAS,EAATA,QAAS,EACDC,mBAAS,CAC5BC,GAAG,GACHC,KAAK,GACLC,WAAU,IAJU,mBACjBC,EADiB,KACZC,EADY,KAiBxB,OACI,uBAAMC,SARV,SAAsBC,GAClBA,EAAEC,iBACCJ,EAAKF,KAAKO,SACTV,EAAQ,2BAAIK,GAAL,IAAUH,GAAGS,iBACpBL,EAAQ,2BAAID,GAAL,IAAUF,KAAK,QAI1B,UACI,uBACAS,KAAO,OACPC,KAAO,OACPC,MAAST,EAAKF,KACdY,SAjBR,SAA+BP,GAC3BF,EAAQ,2BAAID,GAAL,IAAUF,KAAKK,EAAEQ,OAAOF,UAiB3BG,aAAa,iBAEb,wBAAQJ,KAAO,SAAf,wBCFGK,MAzBf,YAAgD,IAAjCb,EAAgC,EAAhCA,KAAKc,EAA2B,EAA3BA,eAAeC,EAAY,EAAZA,WAQ/B,OACI,sBAAKC,MAAS,CAACC,QAAQ,QAAvB,UACA,uBACAT,KAAO,WACPU,QAXJ,WACIJ,EAAed,EAAKH,OAYpB,oBACImB,MAAS,CACLG,MAAM,QACNC,eAAepB,EAAKD,UAAY,eAAiB,MAHzD,SAKEC,EAAKF,OACP,wBAAQoB,QAfZ,WACIH,EAAWf,EAAKH,KAchB,mBCJOwB,MAff,YAAsD,IAAlCC,EAAiC,EAAjCA,MAAMR,EAA2B,EAA3BA,eAAeC,EAAY,EAAZA,WACrC,OACI,6BACKO,EAAMC,KAAI,SAAAvB,GAAI,OACX,cAAC,EAAD,CAEAA,KAAQA,EACRc,eAAgBA,EAChBC,WAAcA,GAHPf,EAAKH,UCHtB2B,EAAoB,wBAoDXC,MAnDf,WAAgB,IAAD,EACY7B,mBAAS,IADrB,mBACN0B,EADM,KACAI,EADA,KAoCb,OAjCAC,qBAAU,WACR,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQR,IAClDI,GACDF,EAASE,KAEX,IAEFD,qBAAU,WACRI,aAAaE,QAAQT,EAAkBK,KAAKK,UAAUZ,MACtD,CAACA,IAyBD,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,2CACA,cAAC,EAAD,CAAUxC,QA1BhB,SAAiBK,GACf0B,EAAS,CAAC1B,GAAF,mBAAUsB,QA0Bd,cAAC,EAAD,CACAA,MAAOA,EACPR,eAzBN,SAAwBjB,GACtB6B,EACEJ,EAAMC,KAAI,SAAAvB,GACR,OAAGA,EAAKH,KAAOA,EACb,2BACKG,GADL,IAEED,WAAYC,EAAKD,YAGdC,OAiBPe,WAbN,SAAoBlB,GAClB6B,EAASJ,EAAMc,QAAO,SAAApC,GAAI,OAAGA,EAAKH,KAAOA,eC1B9BwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.515af35f.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport {v4 as uuid} from \"uuid\";\r\n\r\nfunction TodoForm({addTodo}){\r\n    const [todo,setTodo] = useState({\r\n        id:\"\",\r\n        task:\"\",\r\n        completed:false\r\n    });\r\n    function handleTaskInputChange(e){\r\n        setTodo({...todo,task:e.target.value});\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        if(todo.task.trim()){\r\n            addTodo({...todo,id:uuid()});\r\n            setTodo({...todo,task:\"\"});\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n            name = \"task\"\r\n            type = \"text\"\r\n            value = {todo.task}\r\n            onChange = {handleTaskInputChange}\r\n            autoComplete=\"new-password\"\r\n            />\r\n            <button type = \"submit\">submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import React from \"react\";\r\n\r\nfunction Todo({todo,toggleComplete,removeTodo}){\r\n    function handleCheckboxClick(){\r\n        toggleComplete(todo.id);\r\n    }\r\n\r\n    function handleRemoveClick(){\r\n        removeTodo(todo.id);\r\n    }\r\n    return (\r\n        <div style = {{display:\"flex\"}}>\r\n        <input \r\n        type = \"checkbox\"\r\n        onClick = {handleCheckboxClick}\r\n        />\r\n        <li\r\n            style = {{\r\n                color:\"white\",\r\n                textDecoration:todo.completed ? \"line-through\" : null\r\n            }}\r\n        >{todo.task}</li>\r\n        <button onClick={handleRemoveClick}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList ({todos,toggleComplete,removeTodo}){\r\n    return (\r\n        <ul>\r\n            {todos.map(todo=>(\r\n                <Todo \r\n                key = {todo.id}\r\n                todo = {todo}\r\n                toggleComplete={toggleComplete}\r\n                removeTodo = {removeTodo}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, {useEffect,useState} from \"react\"; \nimport './App.css';\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\nfunction App() {\n  const [todos,setTodos] = useState([]); \n\n  useEffect(()=>{\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if(storageTodos){\n      setTodos(storageTodos);\n    }\n  },[]);\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(todos));\n  },[todos]);\n\n  function addTodo(todo){\n    setTodos([todo,...todos]);\n  }\n\n  function toggleComplete(id){\n    setTodos(\n      todos.map(todo=>{\n        if(todo.id === id){\n          return{\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n  function removeTodo(id){\n    setTodos(todos.filter(todo =>todo.id !== id));\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>React Todo</p>\n        <TodoForm addTodo={addTodo}/>\n        <TodoList \n        todos={todos}\n        toggleComplete={toggleComplete}\n        removeTodo={removeTodo}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}