{"version":3,"sources":["Components/Inholder.js","App.js","reportWebVitals.js","index.js"],"names":["Inholder","props","useState","id","label","placeHolder","inputVal","vals","className","type","placeholder","onChange","e","preventDefault","setInput","target","value","App","travelFrom","travelTo","travelDate","maxTransfers","goTime","arrTime","goBackTime","latestHome","inputOk","specsOutput","setVals","val","h","parseInt","slice","m","onClick","console","log","readOnly","cols","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32bf5572.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nfunction Inholder(props){\r\n    const [vals] = useState({\r\n        id:props.id,\r\n        label:props.label,\r\n        placeHolder:props.placeHolder,\r\n        inputVal:\"\"\r\n    });\r\nfunction handleChange(e){\r\n    e.preventDefault();\r\n    props.setInput(e.target.value);\r\n}\r\nreturn(\r\n<div className = \"InHolder\">\r\n    <label className = \"InholderLabel\">{vals.label}</label>\r\n    <input\r\n    className = \"InInput\" \r\n    type = \"text\"\r\n    placeholder = {vals.placeHolder}\r\n    onChange = {handleChange}\r\n    />\r\n</div>\r\n);\r\n\r\n}\r\n\r\n\r\nexport default Inholder;","import './App.css';\nimport React ,{useState} from \"react\";\nimport Inholder from \"./Components/Inholder\";\nfunction App() {\n  const [vals,setVals] = useState({\n    travelFrom:\"\",\n    travelTo:\"\",\n    travelDate:\"20200816\",\n    maxTransfers:\"10\",\n    goTime:\"06:00\",\n    arrTime:\"10:00\",\n    goBackTime:\"16:00\",\n    latestHome:\"20:00\",\n    inputOk:true,\n    specsOutput:\"\"\n});\nfunction go(){\n  console.log(vals);\n}\n\nfunction setTravelFrom(val){\n  setVals({...vals,travelFrom:val});\n}\nfunction setTravelTo(val){\n  setVals({...vals,travelTo:val});\n}\nfunction setTravelDate(val){\n  setVals({...vals,travelDate:val});\n}\nfunction setMaxTransfers(val){\n  setVals({...vals,maxTransfers:val});\n}\nfunction setGoTime(val){\n  var h =  parseInt(val.slice(0,2));\n  var m = parseInt(val.slice(3,5));\n  if(0<=h && h<=23 && 0<=m && m<=59){\n    setVals({...vals,goTime:val,specsOutput:\"Go time valid\"});\n  }else{\n    setVals({...vals,specsOutput:\"Go time not valid\"});\n  }\n}\nfunction setArrTime(val){\n  setVals({...vals,arrTime:val});\n}\nfunction setGoBackTime(val){\n  setVals({...vals,goBackTime:val});\n}\nfunction setLatestHomeTime(val){\n\n  setVals({...vals,latestHome:val});\n}\n\n\n  return (\n    <div className = \"App\">\n      <div id = \"Top\">\n         <h1>Traffic Routing</h1>\n      </div>\n      <ul id = \"mainList\">\n      <div className = \"tnodes\">\n        <Inholder\n        id = \"0\"\n        label = \"Travel from:\"\n        setInput = {setTravelFrom}\n        placeHolder = \"Start station\"\n        />\n        <Inholder\n        id = \"1\"\n        label = \"Travel to:\"\n        placeHolder = \"End station\"\n        setInput = {setTravelTo}\n        />\n        <Inholder\n        id = \"2\"\n        label = \"Date to Travel:\"\n        placeHolder = \"YYYYMMDD\"\n        setInput = {setTravelDate}\n        />\n        <Inholder\n        id = \"3\"\n        label = \"Max transfers:\"\n        placeHolder = \"E.g. 5\"\n        setInput = {setMaxTransfers}\n        />\n      </div>\n      <div className = \"tnodes\">\n        <Inholder\n        id = \"4\"\n        label = \"Departure time:\"\n        placeHolder = \"HH:MM\"\n        setInput = {setGoTime}\n        />\n        <Inholder\n        id = \"5\"\n        label = \"Arrival time:\"\n        placeHolder = \"HH:MM\"\n        setInput = {setArrTime}\n        />\n        <Inholder\n        id = \"6\"\n        label = \"Go back time:\"\n        placeHolder = \"HH:MM\"\n        setInput = {setGoBackTime}\n        />\n        <Inholder\n        id = \"7\"\n        label = \"Latest back home:\"\n        placeHolder = \"HH:MM\"\n        setInput = {setLatestHomeTime}\n        />\n      </div>\n      <div id = \"searchSpecsfiels\">\n        <button id = \"searchButton\" onClick = {go}>Search</button>\n        <label>Status:</label>\n        <textarea readOnly id=\"specsoutPutField\" cols=\"60\" rows=\"2\" value = {vals.specsOutput}></textarea>\n      </div>\n    </ul>    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}